
buildscript {
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
		classpath "pl.allegro.tech.build:axion-release-plugin:1.10.+"
	}
}

apply plugin: 'pl.allegro.tech.build.axion-release'

group = 'ascelion.poc'
version = scmVersion.version

task clean {
}

allprojects {
	repositories {
		mavenLocal()
		jcenter()
	}

	apply plugin: 'eclipse'
	
	task 'clean-ext'(type: Delete) {
		delete 'bin', 'target', '*.log'
	}

	clean.dependsOn 'clean-ext'

	cleanEclipse {
		delete '.settings', '.classpath'
	}

	defaultTasks 'clean', 'assemble'
}

subprojects { sub ->
	apply plugin: 'java'
	apply from: rootProject.file('lombok.gradle')
	apply from: rootProject.file('tests.gradle')

	group = rootProject.group
	version = rootProject.version

	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'

	tasks.withType( AbstractArchiveTask ) {
		// strip version from archive name
		archiveVersion = ''
	}

	plugins.withType( ApplicationPlugin ) {
		mainClassName = 'ascelion.micro.Main'
	}

	plugins.withType( DistributionPlugin ) {
		distributions.all {
			contents.into '/'
		}
	}

	plugins.withType( DistributionPlugin ) {
		sub.apply from: rootProject.file( 'docker.gradle' )
	}

	tasks.withType( Jar ) {
		manifest {
			attributes(
				'Built-By'       : System.properties['user.name'],
				'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
				'Build-Branch'   : scmVersion.scmPosition.branch,
				'Build-Commit'   : scmVersion.scmPosition.revision,
				'Build-Revision' : "${scmVersion.version}-${scmVersion.scmPosition.shortRevision}",
				'Created-By'     : "Gradle ${gradle.gradleVersion}",
				'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
				'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
			)
		}
	}

	dependencies {
		implementation platform( "org.springframework.boot:spring-boot-dependencies:$springBootVersion" )

		implementation platform( 'org.glassfish.jersey:jersey-bom:2.29.1' )
	//	implementation platform( 'org.jboss.weld:weld-core-bom:3.1.2.Final' )

		implementation platform( 'org.apache.deltaspike.distribution:distributions-bom:1.9.1' )
		implementation platform( 'ascelion.flywaydb:flywaydb-ext:0.1.4-SNAPSHOT' )

		constraints {
			implementation 'jakarta.enterprise:jakarta.enterprise.cdi-api:2.0.2'
			implementation 'jakarta.persistence:jakarta.persistence-api:2.2.2'
			implementation 'jakarta.servlet:jakarta.servlet-api:4.0.2'
			implementation 'jakarta.transaction:jakarta.transaction-api:1.3.3'
			implementation 'jakarta.validation:jakarta.validation-api:2.0.1'

			implementation 'org.apache.commons:commons-lang3:3.9'

			implementation 'io.swagger:swagger-annotations:1.5.23'
		}
	}

	eclipse.project.name = "${project.group}.${rootProject.name}${path.replace(':', '-')}"
}

eclipse.project.name = "${project.group}.${name}"
