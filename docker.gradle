import org.apache.tools.ant.filters.*

def dockerFile = file( 'data' ).exists() ? 'docker-compose-data.yml' : 'docker-compose.yml'
def dockerBase = file( "${buildDir}/distributions" )
def dockerName = 'poc'

def httpPort = Integer.toString( portBase + 8080 )
def jdbcPort = Integer.toString( portBase + 5432 )

task 'docker-files'(type: Copy) {
	into dockerBase

	from( rootProject.file('docker') ) {
		filter ReplaceTokens, tokens: [
			application: project.name,
			httpPort: httpPort,
			jdbcPort: jdbcPort,
			repository: 'localhost:5000/poc/'
			]
	}
	from( file('data') ) {
		into 'data'
	}
}

task 'docker-build'(type: Exec) {
	dependsOn 'docker-files'
	dependsOn 'assemble'

	def touch = file( "${dockerBase}/${project.name}.touch")

	doLast {
		ant.touch( file: touch )
	}

	inputs.files fileTree( dockerBase ) {
		exclude '*.touch'
	}
	outputs.files touch

	executable 'docker-compose'
	workingDir dockerBase

	args '-f', dockerFile, '-p', dockerName
	args 'build'
}

task 'docker-up'(type: Exec) {
	dependsOn 'docker-build'

	executable 'docker-compose'
	workingDir dockerBase

	args '-f', dockerFile, '-p', dockerName
	args 'up', '-d'
}

task 'docker-stop'(type: Exec) {
	dependsOn 'docker-files'

	executable 'docker-compose'
	workingDir dockerBase

	args '-f', dockerFile
	args 'stop'
}

task 'docker-down'(type: Exec) {
	dependsOn 'docker-files'

	executable 'docker-compose'
	workingDir dockerBase

	ignoreExitValue true

	args '-f', dockerFile, '-p', dockerName
	args 'down', '--remove-orphans'
}

bootRun {
	systemProperty "database.port", jdbcPort
}

task startDB(type: Exec) {
	executable 'docker'

	args 'run', '--name', "${project.name}-db"
	args '-d', '--rm'
	args '-e', "POSTGRES_USER=$project.name"
	args '-e', "POSTGRES_PASSWORD=$project.name"
	args '-e', "POSTGRES_DB=$project.name"
	args '-p', "${jdbcPort}:5432"
	args 'postgres:11.5'
}

task stopDB(type: Exec) {
	executable 'docker'

	ignoreExitValue true

	args 'stop', "${project.name}-db"
}
